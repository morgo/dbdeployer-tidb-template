#!/bin/bash
{{.Copyright}}
# Generated by dbdeployer {{.AppVersion}} using {{.TemplateName}} on {{.DateTime}}
source {{.SandboxDir}}/sb_include
MYSQLD_SAFE="bin/mysqld_safe"
CUSTOM_MYSQLD={{.CustomMysqld}}
if [ -n "$CUSTOM_MYSQLD" ]
then
    		CUSTOM_MYSQLD="--mysqld=$CUSTOM_MYSQLD"
fi
if [ ! -f $BASEDIR/$MYSQLD_SAFE ]
then
	echo "mysqld_safe not found in $BASEDIR/bin/"
	exit 1
fi
MYSQLD_SAFE_OK=$(sh -n $BASEDIR/$MYSQLD_SAFE 2>&1)
if [ "$MYSQLD_SAFE_OK" == "" ]
then
	if [ "$SBDEBUG" == "2" ]
	then
		echo "$MYSQLD_SAFE OK"
	fi
else
	echo "$MYSQLD_SAFE has errors"
	echo "((( $MYSQLD_SAFE_OK )))"
	exit 1
fi

TIMEOUT=180
if [ -n "$(is_running)" ]
then
	echo "sandbox server already started (found pid file $PIDFILE)"
else
	if [ -f $PIDFILE ]
	then
		# Server is not running. Removing stale pid-file
		rm -f $PIDFILE
	fi
	CURDIR=$(pwd)
	cd $BASEDIR
	if [ "$SBDEBUG" = "" ]
	then
		$MYSQLD_SAFE --defaults-file=$SBDIR/my.sandbox.cnf $CUSTOM_MYSQLD $@ > /dev/null 2>&1 &
	else
		$MYSQLD_SAFE --defaults-file=$SBDIR/my.sandbox.cnf $CUSTOM_MYSQLD $@ > "$SBDIR/start.log" 2>&1 &
	fi
	cd $CURDIR
	ATTEMPTS=1
	while [ ! -f $PIDFILE ]
	do
		ATTEMPTS=$(( $ATTEMPTS + 1 ))
		echo -n "."
		if [ $ATTEMPTS = $TIMEOUT ]
		then
			break
		fi
		sleep $SLEEP_TIME
	done
fi

if [ -f $PIDFILE ]
then
	echo " sandbox server started"
else
	echo " sandbox server not started yet"
	exit 1
fi
